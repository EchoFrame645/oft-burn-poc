const { expect } = require("chai");
const hre = require("hardhat");
const { ethers } = hre;

describe("üî• OFT Burn Without Delivery", function () {
  let oft, user;

  beforeEach(async () => {
    [user] = await ethers.getSigners();
    const OFT = await ethers.getContractFactory("OFT");
    oft = await OFT.deploy("TestToken", "TST", ethers.ZeroAddress);
    await oft.waitForDeployment();
  });

  it("burns tokens on source even if message fails", async () => {
    const abiCoder = ethers.AbiCoder.defaultAbiCoder();
    const to = abiCoder.encode(["address"], [user.address]);

    const before = await oft.balanceOf(user.address);

    await oft.approve(oft.getAddress(), 100);
    await oft.sendFrom(
      user.address,
      102, // fake destination chain ID
      to,
      100,
      user.address,
      ethers.ZeroAddress,
      "0x"
    );

    const after = await oft.balanceOf(user.address);

    expect(after).to.equal(before - 100n); // note: bigint literal with `n`
    console.log("‚úÖ Tokens burned on source");
    console.log("‚ùå No confirmation or delivery simulated");
  });
});
